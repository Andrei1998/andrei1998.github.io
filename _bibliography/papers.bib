---
---

%%%%%%%%%%%%%%%%%%%%
%%%% Preprints. %%%%
%%%%%%%%%%%%%%%%%%%%
@misc{Constantinescu2024RoadPricing,
    author = {Constantinescu, Andrei and Turko, Andrzej and Wattenhofer, Roger},
    title = {Logarithmic Approximation for Road Pricing on Grids},
    year = 2024,
    abbr={In Submission},
    bibtex_show={true},
}

@misc{Constantinescu2024Validity,
    title={Validity in Network-Agnostic Byzantine Agreement}, 
    author={Constantinescu, Andrei and Dufay, Marc and Ghinea, Diana  and Wattenhofer, Roger},
    year={2024},
    arxiv={2410.19721},
    abbr={arXiv},
    bibtex_show={true},
    abstract={In Byzantine Agreement (BA), there is a set of \(n\) parties, from which up to \(t\) can act byzantine. All honest parties must eventually decide on a common value (agreement), which must belong to a set determined by the inputs (validity). Depending on the use case, this set can grow or shrink, leading to various possible desiderata collectively known as validity conditions. Varying the validity property requirement can affect the regime under which BA is solvable. We study how the selected validity property impacts BA solvability in the network-agnostic model, where the network can either be synchronous with up to \(t_s\) byzantine parties or asynchronous with up to \(t_a \leq t_s\) byzantine parties.
We show that for any non-trivial validity property the condition \(2 \cdot t_s + t_a < n\) is necessary for BA to be solvable, even with cryptographic setup. Noteworthy, specializing this claim to \(t_a = 0\) gives that \(t_s < n/2\) is required when one expects a purely synchronous protocol to also work in asynchrony when there are no corruptions. This is especially surprising given that for some validity properties \(t_s < n\) is known to be achievable without the last stipulation. Thereafter, we give necessary and sufficient conditions for a validity property to render BA solvable, both for the case with cryptographic setup and for the one without. This traces the precise boundary of solvability in the network-agnostic model for every validity property. Our proof of sufficiency provides a universal protocol, that achieves BA for a given validity property whenever the provided conditions are satisfied.},
}

%%%%%%%%%%%%%%%%%%%%
% Conference Papers.
%%%%%%%%%%%%%%%%%%%%
@InProceedings{Constantinescu2024ByzantineBoxes,
    author = {Constantinescu, Andrei and Wattenhofer, Roger},
    title = {Byzantine Game Theory: Sun Tzu's Boxes},
    year = {2025},
    booktitle = {Proceedings of the 24th International Conference on Autonomous Agents and Multiagent Systems, Detroit, Michigan, USA},
    month = may,
    series = {AAMAS'25},
    abbr={AAMAS 25},
    bibtex_show={true},
}

@InProceedings{Baharav2024CondorcetWeightedAnscombe,
    author = {Baharav, Carmel and Constantinescu, Andrei and Wattenhofer, Roger},
    title = {Condorcet Winners and Anscombe's Paradox Under Weighted Binary Voting},
    year = {2025},
    booktitle = {Proceedings of the 24th International Conference on Autonomous Agents and Multiagent Systems, Detroit, Michigan, USA},
    month = may,
    series = {AAMAS'25},
    abbr={AAMAS 25},
    bibtex_show={true},
}

@InProceedings{Constantinescu2024Convex,
  author = {Constantinescu, Andrei and Ghinea, Diana and Wattenhofer, Roger and Westermann, Floris},
  title = {Convex Consensus with Asynchronous Fallback},
  booktitle = {Proceedings of the 38th International Symposium on Distributed Computing, Madrid, Spain},
  abbr={DISC 24},
  year = {2024},
  month = {October},
  url = {https://eprint.iacr.org/2023/1364},
  abstract={Convex Consensus (CC) allows a set of parties to agree on a value \(v\) inside the convex hull of their inputs with respect to a predefined convexity notion, even in the presence of byzantine parties. In this work, we focus on achieving CC in the best-of-both-worlds paradigm, i.e., simultaneously tolerating at most \(t_s\) corruptions if communication is synchronous, and at most \(t_a \leq t_s\) corruptions if it is asynchronous. Our protocol is randomized, which is a requirement under asynchrony, and we prove that it achieves optimal resilience.
In the process, we introduce communication primitives tailored to the best-of-both-worlds model, which we believe to be of independent interest. These are a deterministic primitive, which allows honest parties to obtain intersecting views, and a randomized primitive, leading to identical views (which is impossible to achieve deterministically).
Afterwards, we consider achieving consensus using deterministic protocols, for which the agreement condition must be appropriately relaxed depending on the convexity space. For the relevant case of graph convexity spaces, we find that a previous asynchronous approximate agreement protocol for chordal graphs is incorrect, and hereby give a new protocol for the problem designed for the best-of-both-worlds model and achieving tight point-wise resilience bounds. Finally, we show that asynchronous graph approximate agreement remains unsolvable by deterministic protocols even when corruptions are restricted to at most two crashing nodes and the distance agreement threshold is linear in the size of the graph.},
  eprint_to_show={2023/1364},
  slides={convex_with_async_fallback_disc_slides.pdf},
  bibtex_show={true},
}

@InProceedings{Constantinescu2024Clocks,
  author = {Constantinescu, Andrei and Ghinea, Diana and Sliwinski, Jakub and Wattenhofer, Roger},
  title = {Brief Announcement: Unifying Partial Synchrony},
  booktitle = {Proceedings of the 38th International Symposium on Distributed Computing, Madrid, Spain},
  abbr={DISC 24},
  year = {2024},
  month = {October},
  url = {https://arxiv.org/abs/2405.10249},
  abstract={The distributed computing literature considers multiple options for modeling communication. Most simply, communication is categorized as either synchronous or asynchronous. Synchronous communication assumes that messages get delivered within a publicly known timeframe and that parties' clocks are synchronized. Asynchronous communication, on the other hand, only assumes that messages get delivered eventually. A more nuanced approach, or a middle ground between the two extremes, is given by the partially synchronous model, which is arguably the most realistic option. This model comes in two commonly considered flavors:
(i) The Global Stabilization Time (GST) model: after an (unknown) amount of time, the network becomes synchronous. This captures scenarios where network issues are transient.
(ii) The Unknown Latency (UL) model: the network is, in fact, synchronous, but the message delay bound is unknown.
This work formally establishes that any time-agnostic property that can be achieved by a protocol in the UL model can also be achieved by a (possibly different) protocol in the GST model. By time-agnostic, we mean properties that can depend on the order in which events happen but not on time as measured by the parties. Most properties considered in distributed computing are time-agnostic. The converse was already known, even without the time-agnostic requirement, so our result shows that the two network conditions are, under one sensible assumption, equally demanding.},
  arxiv = {2405.10249},
  bibtex_show={true},
}

@InProceedings{Constantinescu2023Hiking,
  title={Solving Woeginger's Hiking Problem: Wonderful Partitions in Anonymous Hedonic Games}, 
  author={Constantinescu, Andrei and Lenzner, Pascal and ReiffenhÃ¤user, Rebecca and Schmand, Daniel and Varricchio, Giovanna},
  year={2024},
  month={July},
  booktitle={Proceedings of the 51st International Colloquium on Automata, Languages and Programming, Tallinn, Estonia},
  bibtex_show={true},
  arxiv = {2311.02067},
  abbr={ICALP 24},
  abstract={A decade ago, Gerhard Woeginger posed an open problem that became well-known as ``Woeginger's Hiking Problem'': Consider a group of $n$ people that want to go hiking; everyone expresses preferences over the size of their hiking group in the form of an interval between $1$ and $n$. Is it possible to efficiently assign the $n$ people to a set of hiking subgroups so that every person approves the size of their assigned subgroup? The problem is also known as efficiently deciding if an instance of an anonymous Hedonic Game with interval approval preferences admits a wonderful partition. We resolve the open problem in the affirmative by presenting an $O(n^5)$ time algorithm for Woeginger's Hiking Problem. Our solution is based on employing a dynamic programming approach for a specific rectangle stabbing problem from computational geo\-metry. Moreover, we propose natural, more demanding extensions of the problem, e.g., maximizing the number of satisfied participants and variants with single-peaked preferences, and show that they are also efficiently solvable. Last but not least, we employ our solution to efficiently compute a partition that maximizes the egalitarian welfare for anonymous single-peaked Hedonic Games.},
  selected=true,
}

@InProceedings{Tyrovolas2023Unravelling,
  title={Unravelling Expressive Delegations: Complexity and Normative Analysis}, 
  author={Tyrovolas, Giannis and Constantinescu, Andrei and Elkind, Edith},
  arxiv={2312.11932},
  booktitle={Proceedings of the 38th AAAI Conference on Artificial Intelligence, Vancouver, Canada},
  year={2024},
  month={February},
  abbr={AAAI 24},
  abstract={We consider binary group decision-making under a rich model of liquid democracy recently proposed by Colley, Grandi, and Novaro (2022): agents submit ranked delegation options, where each option may be a function of multiple agents' votes; e.g., "I vote yes if a majority of my friends vote yes."
Such ballots are unravelled into a profile of direct votes by selecting one entry from each ballot so as not to introduce cyclic dependencies. We study delegation via monotonic Boolean functions, and two unravelling procedures: MinSum, which minimises the sum of the ranks of the chosen entries, and its egalitarian counterpart, MinMax. We provide complete computational dichotomies: MinSum is hard to compute (and approximate) as soon as any non-trivial functions are permitted, and polynomial otherwise; for MinMax the easiness results extend to arbitrary-arity logical ORs and ANDs taken in isolation, but not beyond.
For the classic model of delegating to individual agents, we give asymptotically near-tight algorithms for carrying out the two procedures and efficient algorithms for finding optimal unravellings with the highest vote count for a given alternative. These algorithms inspire novel tie-breaking rules for the setup of voting to change a status quo.
We then introduce a new axiom, which can be viewed as a variant of the participation axiom, and use algorithmic techniques developed earlier in the paper to show that it is satisfied by MinSum and a lexicographic refinement of MinMax (but not MinMax itself).},
  bibtex_show={true},
}

@InProceedings{Constantinescu2023FairClocks,
  title={A Fair and Resilient Decentralized Clock Network for Transaction Ordering}, 
  author={Constantinescu, Andrei and Ghinea, Diana and Heimbach, Lioba and Wang, Zilin and Wattenhofer, Roger},
  year={2023},
  arxiv={2305.05206},
  abstract={Traditional blockchain design gives miners or validators full control over transaction ordering, i.e., they can freely choose which transactions to include or exclude, as well as in which order. While not an issue initially, the emergence of decentralized finance has introduced new transaction order dependencies allowing parties in control of the ordering to make a profit by front-running others' transactions.
In this work, we present the Decentralized Clock Network, a new approach for achieving fair transaction ordering. Users submit their transactions to the network's clocks, which run an agreement protocol that provides each transaction with a timestamp of receipt which is then used to define the transactions' order. By separating agreement from ordering, our protocol is efficient and has a simpler design compared to other available solutions. Moreover, our protocol brings to the blockchain world the paradigm of asynchronous fallback, where the algorithm operates with stronger fairness guarantees during periods of synchronous use, switching to an asynchronous mode only during times of increased network delay.},
  abbr={OPODIS 23},
  month = {December},
  booktitle = {Proceedings of the 27th International Conference on Principles of Distributed Systems, Tokyo, Japan},
  slides = {clocks_slides.pdf},
  bibtex_show={true},
}

@InProceedings{Berriaud2023StableDinnerParty,
	title = {Stable Dinner Party Seating Arrangements},
  author = {Berriaud, Damien and Constantinescu, Andrei and Wattenhofer, Roger},
	booktitle = {Proceedings of the 19th Conference on Web and Internet Economics, Shanghai, China},
	month = {December},
	year=	{2023},
  abbr={WINE 23},
  arxiv={2305.09549},
  abstract={A group of \(n\) agents with numerical preferences for each other are to be assigned to the $n$ seats of a dining table. We study two natural topologies:~circular (cycle) tables and panel (path) tables. For a given seating arrangement, an agent's utility is the sum of their preference values towards their (at most two) direct neighbors. An arrangement is envy-free if no agent strictly prefers someone else's seat, and it is stable if no two agents strictly prefer each other's seats. Recently, it was shown that for both paths and cycles it is NP-hard to decide whether an envy-free arrangement exists, even for symmetric binary preferences. In contrast, we show that, if agents come from a bounded number of classes, the problem is solvable in polynomial time for arbitrarily-valued possibly asymmetric preferences, including outputting an arrangement if possible. We also give simpler proofs of the previous hardness results if preferences are allowed to be asymmetric. For stability, it is known that deciding the existence of stable arrangements is NP-hard for both topologies, but only if sufficiently-many numerical values are allowed. As it turns out, even constructing unstable instances can be challenging in certain cases, e.g., binary values. We propose a complete characterization of the existence of stable arrangements based on the number of distinct values in the preference matrix and the number of agent classes. We also ask the same question for non-negative values and give an almost-complete characterization, the most interesting outstanding case being that of paths with two-valued non-negative preferences, for which we experimentally find that stable arrangements always exist and prove it under the additional constraint that agents can only swap seats when sitting at most two positions away. Similarly to envy-freeness, we also give a polynomial-time algorithm for determining a stable arrangement assuming a bounded number of classes. We moreover consider the swap dynamics and exhibit instances where they do not converge, despite a stable arrangement existing.},
  slides = {stability_in_seating_arrangements_slides.pdf},
  bibtex_show={true},
  award = {Best Paper Award},
  selected=true,
}

@InProceedings{Constantinescu2023RecoveringSingleCrossing,
	author = {Constantinescu, Andrei and Wattenhofer, Roger},
	title = {Recovering Single-Crossing Preferences From Approval Ballots},
	booktitle = {Proceedings of the 19th Conference on Web and Internet Economics, Shanghai, China},
	month=	{December},
	year=	{2023},
  abbr={WINE 23},
  arxiv={2310.03736},
  code = {https://github.com/Andrei1998/rec-sc-from-approval},
  abstract={An electorate with fully-ranked innate preferences casts approval votes over a finite set of alternatives. As a result, only partial information about the true preferences is revealed to the voting authorities. In an effort to understand the nature of the true preferences given only partial information, one might ask whether the unknown innate preferences could possibly be single-crossing. The existence of a polynomial time algorithm to determine this has been asked as an outstanding problem in the works of Elkind and Lackner. We hereby give a polynomial time algorithm determining a single-crossing collection of fully-ranked preferences that could have induced the elicited approval ballots, or reporting the nonexistence thereof. Moreover, we consider the problem of identifying negative instances with a set of forbidden sub-ballots, showing that any such characterization requires infinitely many forbidden configurations.},
  slides={recovering_single_crossing_slides.pptx},
  bibtex_show={true},
}

@InProceedings{Constantinescu2023BestPolicy,
  author = {Constantinescu, Andrei and Wattenhofer, Roger},
  title = {Computing the Best Policy That Survives a Vote},
  year = {2023},
  isbn = {9781450394321},
  publisher = {International Foundation for Autonomous Agents and Multiagent Systems},
  address = {Richland, SC},
  booktitle = {Proceedings of the 22nd International Conference on Autonomous Agents and Multiagent Systems, London, United Kingdom},
  pages = {2058--2066},
  numpages = {9},
  month = {6},
  keywords = {probabilistic method, judgment aggregation, Anscombe's paradox, randomized algorithms, computational complexity, multiple referenda, approval ballots, computational social choice},
  location = {London, United Kingdom},
  series = {AAMAS'23},
  abbr={AAMAS 23},
  arxiv={2303.00660},
  html={https://dl.acm.org/doi/abs/10.5555/3545946.3598879},
  abstract={An assembly of \(n\) voters needs to decide on \(t\) independent binary issues. Each voter has opinions about the issues, given by a \(t\)-bit vector. Anscombe's paradox shows that a policy following the majority opinion in each issue may not survive a vote by the very same set of \(n\) voters, i.e., more voters may feel unrepresented by such a majority-driven policy than represented. A natural resolution is to come up with a policy that deviates a bit from the majority policy but no longer gets more opposition than support from the electorate.
We show that a Hamming distance to the majority policy of at most \(\lfloor(t - 1) / 2\rfloor\) can always be guaranteed, by giving a new probabilistic argument relying on structure-preserving symmetries of the space of potential policies.
Unless the electorate is evenly divided between the two options on all issues, we in fact show that a policy strictly winning the vote exists within this distance bound. 
Our approach also leads to a deterministic polynomial-time algorithm for finding policies with the stated guarantees, answering an open problem of previous work. For odd \(t\), unless we are in the pathological case described above, we also give a simpler and more efficient algorithm running in expected polynomial time with the same guarantees.
We further show that checking whether distance strictly less than \(\lfloor(t - 1) / 2\rfloor\) can be achieved is NP-hard, and that checking for distance at most some input \(k\) is FPT with respect to several natural parameters.},
  slides={best_policy_aamas_slides.pdf},
  bibtex_show={true},
  selected=true,
}

@InProceedings{Constantinescu2022TwoCrossing,
  title     = {Voting in Two-Crossing Elections},
  author    = {Constantinescu, Andrei and Wattenhofer, Roger},
  booktitle = {Proceedings of the 31st International Joint Conference on
               Artificial Intelligence, Vienna, Austria},
  publisher = {International Joint Conferences on Artificial Intelligence Organization},
  editor    = {Lud De Raedt},
  pages     = {208--214},
  year      = {2022},
  month     = {7},
  doi       = {10.24963/ijcai.2022/30},
  url       = {https://doi.org/10.24963/ijcai.2022/30},
  html      = {https://doi.org/10.24963/ijcai.2022/30},
  abbr      = {IJCAI 22},
  abstract  = {We introduce two-crossing elections as a generalization of single-crossing elections, showing a number of new results. First, we show that two-crossing elections can be recognized in polynomial time, by reduction to the well-studied consecutive ones problem. We also conjecture that recognizing \(k\)-crossing elections is NP-complete in general, providing evidence by relating to a problem similar to consecutive ones proven to be hard in the literature. Single-crossing elections exhibit a transitive majority relation, from which many important results follow. On the other hand, we show that the classical Debord-McGarvey theorem can still be proven two-crossing, implying that any weighted majority tournament is inducible by a two-crossing election. This shows that many voting rules are NP-hard under two-crossing elections, including Kemeny and Slater. This is in contrast to the single-crossing case and outlines an important complexity boundary between single- and two-crossing. Subsequently, we show that for two-crossing elections the Young scores of all candidates can be computed in polynomial time, by formulating a totally unimodular linear program. Finally, we consider the Chamberlin-Courant rule with arbitrary disutilities and show that a winning committee can be computed in polynomial time, using an approach based on dynamic programming.},
  arxiv     = {2205.00474},
  slides    = {two_crossing_slides.pdf},
  bibtex_show={true},
}

@InProceedings{Constantinescu2021SingleCrossingCC,
  title={Proportional Representation under Single-Crossing Preferences Revisited},
  volume={35},
  number={6},
  booktitle={Proceedings of the 35th AAAI Conference on Artificial Intelligence, Virtual},
  author={Constantinescu, Andrei and Elkind, Edith}, 
  year={2021},
  month={May},
  pages={5286--5293},
  abbr={AAAI 21},
  arxiv={2010.08637},
  url={https://ojs.aaai.org/index.php/AAAI/article/view/16667},
  html={https://ojs.aaai.org/index.php/AAAI/article/view/16667},
  abstract={We study the complexity of determining a winning committee under the Chamberlin--Courant voting rule when voters' preferences are single-crossing on a line, or, more generally, on a tree. For the  line, Skowron et al. (2015) describe an \(O(n^2mk)\) algorithm 
(where \(n\), \(m\), \(k\) are the number of voters, the number of candidates and the committee size, respectively); we show that a simple tweak improves the time complexity to \(O(nmk)\). We then improve this bound for \(k=\Omega(\log n)\) by reducing our problem to the \(k\)-link path problem for DAGs with concave Monge weights, obtaining a
\(nm2^{O\left(\sqrt{\log k\log\log n}\right)}\) algorithm for the general case and a nearly linear algorithm for the Borda misrepresentation function. For trees, we point out an issue with the algorithm proposed by Clearwater, Puppe, and Slinko (2015), 
and develop a \(O(nmk)\) algorithm for this case as well.},
  slides    = {single_crossing_cc_slides.pdf},
  bibtex_show={true},
  selected=true,
}
